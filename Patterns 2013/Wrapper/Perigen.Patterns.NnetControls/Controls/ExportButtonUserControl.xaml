<UserControl x:Class="Perigen.Patterns.NnetControls.Controls.ExportButtonUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="25" d:DesignWidth="100" Background="Transparent" Name="exportButtonUserControl">

    <UserControl.Resources>

        <ControlTemplate x:Key="IconClock">
            <Image Source="../Resources/clock.ico" Width="15" Height="15"/>
        </ControlTemplate>

        <Storyboard x:Key="ShowPopup">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PopupMenu" Storyboard.TargetProperty="(Popup.IsOpen)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00.4" Value="True" />
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="HidePopup" Storyboard.TargetName="PopupMenu" Storyboard.TargetProperty="(Popup.IsOpen)">
            <BooleanAnimationUsingKeyFrames>
                <DiscreteBooleanKeyFrame KeyTime="00:00:00.4" Value="False" />
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="StayOpenPopup">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PopupMenu" Storyboard.TargetProperty="(Popup.IsOpen)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00.4" Value="True" />
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="ClosePopup" Storyboard.TargetName="PopupMenu" Storyboard.TargetProperty="(Popup.IsOpen)">
            <BooleanAnimationUsingKeyFrames>
                <DiscreteBooleanKeyFrame KeyTime="00:00:00.4" Value="False" />
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>

        <Style x:Key="ExportTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Foreground" Value="#4e4e4e" />
        </Style>

        <Style x:Key="PopupMenuItemStyle" TargetType="TextBlock">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Foreground" Value="#686868"/>
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Background" Value="Transparent" />

            <Style.Triggers>
                                
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="#afafaf"/>
                </Trigger>
                
            </Style.Triggers>
        </Style>
             
        <Style x:Key="TimeRangePopup" x:Name="_timeRange" TargetType="ContentControl">
            <Setter Property="MaxHeight" Value="160"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>

                        <Grid Background="Transparent" Name="mainGrid">
                            <Grid.BitmapEffect>
                                <DropShadowBitmapEffect Color="Gray" ShadowDepth="5" Opacity="0.85"/>
                            </Grid.BitmapEffect>

                            <Border Background="#ebebeb" BorderBrush="#c9c9c9" BorderThickness="1" Margin="60,10,10,0" CornerRadius="5,5,0,0" Name="PopupCtrl" >
                                <GroupBox Header="Time Range" Margin="5" FontFamily="Arial" Foreground="#FF686868" FontSize="12" >
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,10,0,0">
                                    
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="25"/>
                                        <RowDefinition Height="25"/>
                                    </Grid.RowDefinitions>

                                        <RadioButton Content="30 min" FontFamily="Arial" Foreground="#FF686868" FontSize="12"
                                                     IsChecked="{Binding Is30MinChecked, ElementName=exportButtonUserControl, Mode=TwoWay}" Checked="RadioButton_Checked"></RadioButton>

                                        <RadioButton Content="15 min" Grid.Row="1" FontFamily="Arial" Foreground="#FF686868" FontSize="12"
                                                     IsChecked="{Binding Is15MinChecked, ElementName=exportButtonUserControl, Mode=TwoWay}" Checked="RadioButton_Checked"></RadioButton>
                                        
                                        <!--<Border Grid.Row="0" Tag="30" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,0,10,0" 
                                            IsEnabled="{Binding Is30MinChecked, ElementName=exportButtonUserControl}"
                                            MouseLeftButtonUp="Border_MouseLeftButtonUp">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#e7f4fe" />
                                                    </Trigger>                                                    
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>

                                        <TextBlock x:Name="txt30Min" Text="Time Range 30 min" Style="{StaticResource PopupMenuItemStyle}" IsEnabled="{Binding Is30MinChecked, ElementName=exportButtonUserControl}"
                                                VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        
                                    </Border>

                                    <Border Grid.Row="1" Tag="15" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,0,10,0"
                                            IsEnabled="{Binding Is15MinChecked, ElementName=exportButtonUserControl}"
                                            MouseLeftButtonUp="Border_MouseLeftButtonUp">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>                                                  
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#e7f4fe" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>

                                        <TextBlock x:Name="txt15Min" Text="Time Range 15 min" Style="{StaticResource PopupMenuItemStyle}" IsEnabled="{Binding Is15MinChecked, ElementName=exportButtonUserControl}"
                                               VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        
                                    </Border>-->

                                    </Grid>
                                </GroupBox>
                            </Border>
                                                  
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>   

    </UserControl.Resources>
    
    <Grid Background="White">
        <Border BorderBrush="#c9c9c9" BorderThickness="1" CornerRadius="0,0,5,5" Background="#ebebeb" >
            
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="45"/>
                </Grid.ColumnDefinitions>
            
                <TextBlock Text="Export" Style="{StaticResource ExportTextStyle}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                <Canvas Name="borderBtnExport" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Height="15" Width="15">
                    <ContentControl Template="{StaticResource IconClock}"/>
                </Canvas>

                <Popup AllowsTransparency="True" Name="PopupMenu"
                               Placement="Top"
                               PopupAnimation="None"
                               IsOpen="{Binding Path=IsMouseOver, ElementName=borderBtnExport, Mode=OneWay}">

                    <ContentControl Style="{StaticResource TimeRangePopup}"/>

                    <Popup.Triggers>

                        <EventTrigger RoutedEvent="Canvas.MouseEnter" >
                            <BeginStoryboard Storyboard="{StaticResource StayOpenPopup}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="Canvas.MouseLeave" >
                            <BeginStoryboard Storyboard="{StaticResource ClosePopup}"/>
                        </EventTrigger>

                    </Popup.Triggers>

                </Popup>
            </Grid>
        </Border>
        
        <Grid.Triggers>
            <EventTrigger RoutedEvent="Canvas.MouseEnter">
                <BeginStoryboard Storyboard="{StaticResource ShowPopup}"/>
            </EventTrigger>

            <EventTrigger RoutedEvent="Canvas.MouseLeave">
                <BeginStoryboard Storyboard="{StaticResource HidePopup}"/>
            </EventTrigger>
        </Grid.Triggers>
    </Grid>
    
</UserControl>
