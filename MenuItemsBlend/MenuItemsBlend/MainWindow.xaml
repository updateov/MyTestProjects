<Window x:Class="MenuItemsBlend.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
	<Window.Resources>
<!-- Simple MenuItem - The template uses triggers to provide four different arrangements of menu item which are set via the Role property --> 
		<Style x:Key="MenuItemStyle1" TargetType="{x:Type MenuItem}">
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type MenuItem}">
						<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
							
							<!-- Content for the menu text etc -->
							<!-- <ContentPresenter Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header"/> -->
							<ContentPresenter Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" Content="{Binding}"/>
						</Border>
					
					<!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
						<ControlTemplate.Triggers>
					
						<!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
							<Trigger Property="Role" Value="TopLevelHeader">
								<Setter Property="Margin" Value="0,1,0,1"/>
								<Setter Property="Padding" Value="6,3,6,3"/>
								<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
							</Trigger>
						
						<!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
							<Trigger Property="Role" Value="TopLevelItem">
								<Setter Property="Margin" Value="0,1,0,1"/>
								<Setter Property="Padding" Value="6,3,6,3"/>
							</Trigger>
						
						<!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
							<Trigger Property="Role" Value="SubmenuHeader">
								<Setter Property="DockPanel.Dock" Value="Top"/>
								<Setter Property="Padding" Value="0,2,0,2"/>
								<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
							</Trigger>
						
						<!-- Role = SubMenuItem : this is a child menu item which has children-->
							<Trigger Property="Role" Value="SubmenuItem">
								<Setter Property="DockPanel.Dock" Value="Top"/>
								<Setter Property="Padding" Value="0,2,0,2"/>
							</Trigger>
						
						<!-- Using the system colors for the Menu Highlight and IsEnabled-->
							<Trigger Property="IsHighlighted" Value="true">
								<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" TargetName="Border"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	
	</Window.Resources>
    <StackPanel>
    	<Menu Height="25" Style="{DynamicResource SimpleMenu}">
    		<MenuItem Header="MenuItem" HorizontalAlignment="Left" Style="{DynamicResource SimpleMenuItem}" Width="87.6066665712992">
    			<MenuItem Header="MenuItem" HorizontalAlignment="Left" StaysOpenOnClick="True" Style="{DynamicResource MenuItemStyle1}" Width="87.6066665712992"/>
    			<MenuItem Header="MenuItem" HorizontalAlignment="Left" Style="{DynamicResource SimpleMenuItem}" Width="87.6066665712992"/>
    		</MenuItem>
    	</Menu>
        
    </StackPanel>
</Window>
