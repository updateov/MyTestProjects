<Window x:Class="PatternsCRIClient.Screens.NotifyPopup"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:PatternsCRIClient"
        xmlns:enum="clr-namespace:CRIEntities;assembly=CRIEntities"
        x:Name="notifyWindow"
        Title="" Height="320" Width="435"
        ShowInTaskbar="False"
        WindowStyle="None" 
        AllowsTransparency="True" 
        ResizeMode="NoResize"
        Visibility="Visible" 
        Topmost="True" 
        Background="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, Converter={StaticResource CRIStatusToBorderColorConverter}}"   
        BorderBrush="Transparent"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        mc:Ignorable="d" 
        Closing="uiMainNotifyWindow_Closing"
        Loaded="uiMainNotifyWindow_Loaded"
        xmlns:ctrl="clr-namespace:PatternsCRIClient.Controls"
        xmlns:converter="clr-namespace:PatternsCRIClient.Converters"
    >

    <Window.Resources>
             
        <!--<local:LocalTimer x:Key="PopupTimer" Enabled="True" />-->

        <Storyboard x:Key="gridFadeInStoryBoard">
            <DoubleAnimation Storyboard.TargetName="uiGridMain" BeginTime="0:0:0.1"
                Storyboard.TargetProperty="Opacity" From="0.00" To="1.00" AutoReverse="False" Duration="0:0:0.3" />
        </Storyboard>
        <Storyboard x:Key="gridFadeOutStoryBoard">
            <DoubleAnimation Storyboard.TargetName="uiGridMain" BeginTime="0:0:0.1"
                Storyboard.TargetProperty="Opacity" From="1.00" To="0.00" AutoReverse="False" Duration="0:0:0.3" />
        </Storyboard>

        <!--**************************
            *    STYLE: MenuItem
            ************************** -->
        <SolidColorBrush x:Key="HighlightedBackgroundBrush" Color="LightGray" />
        <SolidColorBrush x:Key="MenuBackgroundBrush" Color="LightGray" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="LightGray" />
        <SolidColorBrush x:Key="SolidMenuFontBrush" Color="Black" />
        <SolidColorBrush x:Key="HighlightedText" Color="Black" />

        <Style x:Key="SeparatorStyle" TargetType="Separator">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border BorderBrush="LightGray" Background="#a3a3a3" BorderThickness="8,5,8,5" Height="11" Margin="-1,0,0,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
          
        <Style x:Key="PopupMenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Height" Value="35"/>
            <Setter Property="Foreground" Value="#1A1A1A"/>
            <Setter Property="FontSize" Value="13" />
            <Setter Property="FontFamily" Value="Arial"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="270"
                                  Background="LightGray"
                                  BorderBrush="LightGray"
                                  BorderThickness="1" Margin="-1,0,0,0">
                            
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      
                                <ContentPresenter VerticalAlignment="Center" Margin="10,0,10,0"
                                                x:Name="HeaderHost"
                                                ContentSource="Header"/>
               
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                           
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" Value="WhiteSmoke" TargetName="Border"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="BorderBrush" Value="WhiteSmoke" TargetName="Border"/>
                            </Trigger>
                            
                            <Trigger Property="IsHighlighted" Value="false">
                                <Setter Property="Background" Value="LightGray" TargetName="Border"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="BorderBrush" Value="LightGray" TargetName="Border"/>
                            </Trigger>
                            
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <ControlTemplate x:Key="MissingDataStateStyle" TargetType="ContentControl" >

            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="White" >

                <Grid.RowDefinitions>
                    <RowDefinition Height="55" />
                    <RowDefinition Height="60" />
                    <RowDefinition Height="35" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock Name="txtDescription" Style="{StaticResource RegularFontStyle}"
                       Grid.Row="0"  Margin="20,10,0,0">
                        <Run Text="CheckList detection is not enabled in patients whose"/><LineBreak/>
                        <Run Text="gestational age or # of fetuses is missing"/>
                </TextBlock>

                <StackPanel Orientation="Horizontal" Grid.Row="1" VerticalAlignment="Stretch">

                    <StackPanel Orientation="Vertical" Margin="20,7,0,3" VerticalAlignment="Stretch">

                        <TextBlock Style="{StaticResource RegularFontStyle}"># of Fetuses:</TextBlock>

                        <ComboBox Name="cmbFetusNum" Style="{StaticResource PopupComboStyle}" IsEditable="True"  HorizontalContentAlignment="Left" VerticalContentAlignment="Center"                                           
                                  SelectedValue="{Binding Path=FetusNum, ElementName=notifyWindow, Mode=TwoWay}"
                                  ItemsSource="{Binding Path=Fetuses, ElementName=notifyWindow}"
                                  Height="30" Width="110" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Bottom">

                            <ComboBox.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                     Color="#A2A2A2" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                     Color="Black" />
                            </ComboBox.Resources>

                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding}" Style="{StaticResource RegularFontStyle}" Height="20" TextAlignment="Left" Margin="10,3,0,0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                    </StackPanel>

                    <StackPanel Orientation="Vertical" Margin="20,7,0,3">

                        <TextBlock Style="{StaticResource RegularFontStyle}">EDD:</TextBlock>

                        <StackPanel Orientation="Horizontal" >

                            <Border Height="30" Width="110" HorizontalAlignment="Left" BorderBrush="#A2A2A2" BorderThickness="1" Margin="0,0,0,5">
                                <DatePicker Name="dtEDD" Height="30" Width="105" HorizontalAlignment="Left" Margin="5,5,0,0" VerticalAlignment="Bottom" 
                                            SelectedDate="{Binding Path=EDD, ElementName=notifyWindow, Mode=OneWayToSource}"
                                            SelectedDateChanged="dpEDD_SelectedDateChanged"
                                            Style="{StaticResource styleDatePicker}" Validation.ErrorTemplate="{x:Null}"/><!--FocusVisualStyle="{x:Null}"-->
                            </Border>
                            
                            <!--<DatePicker Name="dpEDD" Width="110" Height="30" Style="{StaticResource styleDatePicker}" 
                                        SelectedDate="{Binding Path=EDD, ElementName=notifyWindow, Mode=OneWayToSource}"
                                        SelectedDateChanged="dpEDD_SelectedDateChanged"></DatePicker>-->

                            <TextBlock Name="txtGA" Text="{Binding Path=GA, ElementName=notifyWindow, StringFormat='GA: {0}'}" 
                                       Style="{StaticResource RegularFontStyle}" Margin="10,-5,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center" ></TextBlock>
                            
                        </StackPanel>
                    </StackPanel>

                </StackPanel>

                <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right">
                    
                    <Button Name="btnCancel" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,10,0" 
                            Height="30" Width="110" Style="{StaticResource PopupButtonCloseStyle}"
                            Click="btnCancel_Click">Cancel</Button>

                    <Button Name="btnSave" Style="{StaticResource PopupButtonSaveStyle}" Margin="0,0,20,0" 
                            VerticalAlignment="Stretch" HorizontalAlignment="Right"  
                            Height="30" Width="110" Click="btnSave_Click" >Ok</Button>

                </StackPanel>

                <TextBlock Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,10"
                                Text="{StaticResource POPUP_Contract_Index}" Style="{StaticResource SmallFontStyle}"/>
            </Grid>

        </ControlTemplate>

        <ControlTemplate x:Key="CRINotEnabledStateStyle" TargetType="ContentControl" >

            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="White">

                <Grid.RowDefinitions>
                    <RowDefinition Height="55" />
                    <RowDefinition Height="60" />
                    <RowDefinition Height="35" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock Name="txtDescription" Style="{StaticResource RegularFontStyle}"
                       Grid.Row="0"  Margin="20,10,0,0">
                        <Run Text="CheckList detection is not enabled when gestational age"/><LineBreak/>
                        <Run Text="less than 36 w or # of fetuses greater than 1."/>
                </TextBlock>

                <StackPanel Orientation="Horizontal" Grid.Row="1" VerticalAlignment="Stretch">

                    <StackPanel Orientation="Vertical" Margin="20,7,0,3" VerticalAlignment="Stretch">

                        <TextBlock Style="{StaticResource RegularFontStyle}"># of Fetuses</TextBlock>
                        
                        <ComboBox Name="cmbFetusNum" Style="{StaticResource PopupComboStyle}" IsEditable="True"  HorizontalContentAlignment="Left" VerticalContentAlignment="Center"                                           
                                  SelectedValue="{Binding Path=FetusNum, ElementName=notifyWindow, Mode=TwoWay}"
                                  ItemsSource="{Binding Path=Fetuses, ElementName=notifyWindow}"
                                  Height="30" Width="110" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Bottom">

                            <ComboBox.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                     Color="#A2A2A2" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                     Color="Black" />
                            </ComboBox.Resources>
                         
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding}" Style="{StaticResource RegularFontStyle}" Height="20" TextAlignment="Left" Margin="10,3,0,0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>                       
                        
                    </StackPanel>

                    <StackPanel Orientation="Vertical" Margin="20,7,0,3">

                        <TextBlock Style="{StaticResource RegularFontStyle}">EDD:</TextBlock>

                        <StackPanel Orientation="Horizontal" >

                            <Border Height="30" Width="110" HorizontalAlignment="Left" BorderBrush="#A2A2A2" BorderThickness="1" Margin="0,0,0,5">
                                <DatePicker Name="dtEDD" Height="30" Width="105" HorizontalAlignment="Left" Margin="5,5,0,0" VerticalAlignment="Bottom" 
                                            SelectedDate="{Binding Path=EDD, ElementName=notifyWindow, Mode=TwoWay}"
                                            Style="{StaticResource styleDatePicker}" FocusVisualStyle="{x:Null}" Validation.ErrorTemplate="{x:Null}"
                                            SelectedDateChanged="dpEDD_SelectedDateChanged"/>
                            </Border>
                            
                            <!--<DatePicker Name="dpEDD" Width="110" Height="30" Style="{StaticResource styleDatePicker}" 
                                        SelectedDate="{Binding Path=EDD, ElementName=notifyWindow, Mode=TwoWay}"
                                        SelectedDateChanged="dpEDD_SelectedDateChanged"></DatePicker>-->

                            <TextBlock Name="txtGA" Text="{Binding Path=GA, ElementName=notifyWindow, StringFormat='GA: {0}'}" 
                                       Style="{StaticResource RegularFontStyle}" Margin="10,-5,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center" ></TextBlock>

                        </StackPanel>
                    </StackPanel>

                   
                </StackPanel>

                <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="20,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right">

                    <Button Name="btnCancel" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,10,0" 
                            Height="30" Width="110" Style="{StaticResource PopupButtonCloseStyle}"
                            Click="btnCancel_Click">Cancel</Button>

                    <Button Name="btnSave" Style="{StaticResource PopupButtonSaveStyle}" Margin="0,0,20,0" 
                            VerticalAlignment="Stretch" HorizontalAlignment="Right"  
                            Height="30" Width="110" Click="btnSave_Click" >Ok</Button>

                </StackPanel>
                
                <TextBlock Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,10"
                           Text="{StaticResource POPUP_Contract_Index}" Style="{StaticResource SmallFontStyle}"/>
            </Grid>

        </ControlTemplate>

        <Style x:Key="CRIEventsStyle" TargetType="ContentControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="White">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.5*"/>
                                <ColumnDefinition Width="0.5*"/>
                            </Grid.ColumnDefinitions>
                            
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10*" />
                                <RowDefinition Height="10*" />
                                <RowDefinition Height="10*" />
                            </Grid.RowDefinitions>

                            <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,0,0,0">

                                <TextBlock x:Name="txtVariability" Style="{Binding Path=IsBoldVariability, ElementName=notifyWindow, Converter={StaticResource BoolToFontConverter}}">
                                    <Run Text="{Binding Path=Variability, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" />
                                    <Run Text=" Variability" />                                   
                                </TextBlock>

                                <TextBlock x:Name="txtAccels" Margin="10,0,0,0" Style="{Binding Path=IsBoldAccels, ElementName=notifyWindow, Converter={StaticResource BoolToFontConverter}}">
                                    <Run Text="{Binding Path=Accels, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" /> 
                                    <Run Text=" Accels" />
                                </TextBlock>

                            </StackPanel>

                            <TextBlock x:Name="txtContractions" Grid.Row="1" Margin="0,5,0,0" Style="{Binding Path=IsBoldContractions, ElementName=notifyWindow, Converter={StaticResource BoolToFontConverter}}">
                                <Run Text="{Binding Path=Contractions, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" /> 
                                <Run Text=" Contractions" />
                            </TextBlock>

                            <TextBlock x:Name="txtLongContractions" Grid.Row="2" Margin="0,5,0,0" Style="{Binding Path=IsBoldLongContractions, ElementName=notifyWindow, Converter={StaticResource BoolToFontConverter}}">
                                <Run Text="{Binding Path=LongContractions, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" /> 
                                <Run Text=" Contractions (&gt;120 sec)" />
                            </TextBlock>

                            <TextBlock x:Name="txtLargeDecels" Grid.Row="0" Grid.Column="1" Margin="20,0,0,0" Style="{Binding Path=IsBoldLargeDeceles, ElementName=notifyWindow, Converter={StaticResource BoolToFontConverter}}">
                                <Run Text="{Binding Path=LargeDeceles, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" /> 
                                <Run Text=" Decels (&gt;= 60 x 60)" />
                            </TextBlock>

                            <TextBlock x:Name="txtLateDecels" Grid.Row="1" Grid.Column="1" Margin="20,5,0,0" Style="{Binding Path=IsBoldLateDecels, ElementName=notifyWindow, Converter={StaticResource BoolToFontConverter}}">
                                <Run Text="{Binding Path=LateDecels, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" /> 
                                <Run Text=" Late Decels" />
                            </TextBlock>

                            <TextBlock x:Name="txtProlongedDecels" Grid.Row="2" Grid.Column="1" Margin="20,5,0,0" Style="{Binding Path=IsBoldProlongedDecels, ElementName=notifyWindow, Converter={StaticResource BoolToFontConverter}}">
                                <Run Text="{Binding Path=ProlongedDecels, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" /> 
                                <Run Text=" Prolonged Decels" />
                            </TextBlock>

                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="NegativeStateStyle" TargetType="ContentControl" >

            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="White">  

                <Grid.RowDefinitions>
                    <RowDefinition Height="20*" />
                    <RowDefinition Height="60*" />
                    <RowDefinition Height="15*" />
                </Grid.RowDefinitions>

                <TextBlock Name="fromToTime" Style="{StaticResource BoldFontStyle}" Margin="20,10,0,0"  Text="{Binding Path=DisplayFromToTime, ElementName=notifyWindow}">
                </TextBlock>

                <ContentControl  Grid.Row="1" Style="{StaticResource CRIEventsStyle}" VerticalAlignment="Center" Margin="20,0,20,30"/>

                <TextBlock Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0"
                                Text="{StaticResource POPUP_Contract_Index}" Style="{StaticResource SmallFontStyle}"/>
            </Grid>

        </ControlTemplate>

        <ControlTemplate x:Key="InactiveStateStyle" TargetType="ContentControl" >

            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="White">

                <Grid.RowDefinitions>
                    <RowDefinition Height="60*" />
                    <RowDefinition Height="40*" />
                </Grid.RowDefinitions>

                <TextBlock Name="inactiveText" Text="CheckList is inactive" Style="{StaticResource RegularFontStyle}"
                                Grid.Row="0" Margin="20,20,0,0"/>

                <TextBlock Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,10"
                                Text="{StaticResource POPUP_Contract_Index}" Style="{StaticResource SmallFontStyle}"/>
            </Grid>

        </ControlTemplate>

        <ControlTemplate x:Key="DataLess30MinStateStyle" TargetType="ContentControl" >

            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="White">

                <Grid.RowDefinitions>
                    <RowDefinition Height="60*" />
                    <RowDefinition Height="40*" />
                </Grid.RowDefinitions>

                <TextBlock Name="inactiveText" Style="{StaticResource RegularFontStyle}"
                           Grid.Row="0" Margin="20,20,0,0">
                        <Run Text="CheckList state is unknown. "/>
                        <LineBreak/>
                        <Run Text="Not enough data in last 30 minutes to calculate CheckList." />
                </TextBlock>

                <TextBlock Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,10"
                                Text="{StaticResource POPUP_Contract_Index}" Style="{StaticResource SmallFontStyle}"/>
            </Grid>

        </ControlTemplate>

        <ControlTemplate x:Key="PastPositiveStateStyle" TargetType="ContentControl" >

            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="White">

                <Grid.RowDefinitions>
                    <RowDefinition Height="20*" />
                    <RowDefinition Height="60*" />
                    <RowDefinition Height="15*" />
                </Grid.RowDefinitions>

                <TextBlock Name="fromToTime" Margin="20,10,0,0" Style="{StaticResource BoldFontStyle}" Text="{Binding Path=DisplayFromToTime, ElementName=notifyWindow}">
                </TextBlock>

                <ContentControl Grid.Row="1" Style="{StaticResource CRIEventsStyle}" VerticalAlignment="Center" Margin="20,0,20,30"/>

                <TextBlock Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,10"
                                Text="{StaticResource POPUP_Contract_Index}" Style="{StaticResource SmallFontStyle}"/>
            </Grid>

        </ControlTemplate>

        <ControlTemplate x:Key="PositiveStateStyle" TargetType="ContentControl" >

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>

                <TabControl Name="tabCtrl" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="White" BorderBrush="Transparent" BorderThickness="0">

                    <TabItem x:Name="tabTracing" Header="{Binding Path=DisplayFromToTime, ElementName=notifyWindow}" BorderBrush="Transparent" BorderThickness="0" Style="{StaticResource PopupTabItemStyle}" >

                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="White">

                            <ContentControl Style="{StaticResource CRIEventsStyle}" VerticalAlignment="Center" Margin="18,0,20,30"/>

                        </Grid>

                    </TabItem>

                    <TabItem Name="tabHistory" Header="{Binding Path=PastTabLable, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" 
                         Visibility="{Binding Path=HistoryTabVisibility, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}"
                         BorderBrush="Transparent" Style="{StaticResource PopupTabItemStyle}">

                        <ListBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,5,10,5"
                             ItemContainerStyle="{StaticResource HistoryListBoxItem}"
                             ItemsSource="{Binding CurrentPatient.NotRevewedPositiveCRIs, ElementName=notifyWindow}">

                        </ListBox>

                    </TabItem>

                </TabControl>

                <Border Grid.Row="1" Background="White" BorderBrush="Transparent" BorderThickness="0" >

                    <TextBlock Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,10"
                                Text="{StaticResource POPUP_Contract_Index}" Style="{StaticResource SmallFontStyle}"/>

                </Border>

            </Grid>

        </ControlTemplate>
        
        <Style x:Key="PopupCRIContentStyle" TargetType="{x:Type ContentControl}">
            <Style.Triggers>

                <DataTrigger Binding="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static Member=enum:CRIState.Negative}">
                    <Setter Property="Template" Value="{StaticResource NegativeStateStyle}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static Member=enum:CRIState.Off}">
                    <Setter Property="Template" Value="{StaticResource InactiveStateStyle}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static Member=enum:CRIState.UnknownNotEnoughTime}">
                    <Setter Property="Template" Value="{StaticResource DataLess30MinStateStyle}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static Member=enum:CRIState.UnknownGAOrSingletonMissing}">
                    <Setter Property="Template" Value="{StaticResource MissingDataStateStyle}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static Member=enum:CRIState.UnknownGAOrSingletonNotMet}">
                    <Setter Property="Template" Value="{StaticResource CRINotEnabledStateStyle}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static Member=enum:CRIState.PositivePastNotYetReviewed}">
                    <!--<Setter Property="Template" Value="{StaticResource PastPositiveStateStyle}"/>-->
                    <Setter Property="Template" Value="{StaticResource PositiveStateStyle}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static Member=enum:CRIState.PositiveCurrent}">
                    <Setter Property="Template" Value="{StaticResource PositiveStateStyle}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static Member=enum:CRIState.PositiveReviewed}">
                    <Setter Property="Template" Value="{StaticResource PositiveStateStyle}"/>
                </DataTrigger>

            </Style.Triggers>
        </Style>
                       
    </Window.Resources>

    <!--<Viewbox Height="220" Width="320">-->
    <Grid x:Name="uiGridMain"
              Margin="10">

        <Border Width="412" Height="299" Style="{StaticResource NotifyBorderStyle}" CornerRadius="0" Opacity="1" BorderThickness="2"
                BorderBrush="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource CRIStatusToPopupBorderColorConverter}}"
                Background="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource CRIStatusToPopupBackgroundConverter}}">
            <DockPanel>

                <Grid Width="408">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="91"/>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Canvas x:Name="HelpButton" Height="16" Width="16" HorizontalAlignment="Right" VerticalAlignment="Top" 
                            Margin="0,2,30,0" Grid.Row="0" MouseLeftButtonDown="HelpButton_MouseLeftButtonDown"
                            Background="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource CRIStatusToPopupBackgroundConverter}}">
                        <ContentControl>
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Setter Property="Template" Value="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, Converter={StaticResource PopupHelpIconConverter}}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Template" Value="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, Converter={StaticResource PopupHelpHoverIconConverter}}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </Canvas>
                    
                    <Canvas x:Name="CloseButton" Height="16" Width="16" HorizontalAlignment="Right" VerticalAlignment="Top" 
                            Margin="0,5,5,0" Grid.Row="0" MouseLeftButtonDown="CloseButton_MouseLeftButtonDown" 
                            Background="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource CRIStatusToPopupBackgroundConverter}}">                       
                        <ContentControl>
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Setter Property="Template" Value="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, Converter={StaticResource PopupCloseIconConverter}}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Template" Value="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, Converter={StaticResource PopupCloseHoverIconConverter}}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </Canvas>

                    <Canvas x:Name="ZoomButton" Height="32" Width="32" HorizontalAlignment="Right" VerticalAlignment="Bottom" 
                            Margin="0,0,2,2" Grid.Row="0" MouseLeftButtonDown="TracingControl_MouseLeftButtonUp" ToolTip="Open PeriCALM CheckList Tracing View"
                            Background="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource CRIStatusToPopupBackgroundConverter}}">
                        <ContentControl>
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Setter Property="Template" Value="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, Converter={StaticResource PopupZoomIconConverter}}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Template" Value="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, Converter={StaticResource PopupZoomHoverIconConverter}}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </Canvas>

                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,15,0" Height="91">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="50" />
                        </Grid.ColumnDefinitions>
                        
                        <Canvas Height="32" Width="32" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="15,15,0,0">
                            <ContentControl Template="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, Converter={StaticResource CRIStatusToIcon32Converter}}"/>
                        </Canvas>

                        <StackPanel Orientation="Vertical" Grid.Column ="1" Grid.ColumnSpan="2" VerticalAlignment="Center" Margin="5,0,0,28">
                            
                            <!--<StackPanel Orientation="Horizontal" >-->
                                
                                <TextBlock x:Name="txtCRITopStatus" Style="{StaticResource PopupStatusFontStyle}" 
                                           Text="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, Converter={StaticResource  CRIStatusToPopupDescriptionConverter}}" 
                                           Foreground="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, Converter={StaticResource CRIStatusToPopupForegroundConverter}}"
                                           VerticalAlignment="Center" TextAlignment="Left" />

                                <TextBlock VerticalAlignment="Center" TextAlignment="Left"
                                           Foreground="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, Converter={StaticResource CRIStatusToForegroundConverter}}"
                                           >
                                    <Run Text="at"/>
                                    <Run Text="{Binding CurrentPatient.DisplayStartTime, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" />
                                    <Run Text="Duration:"/>
                                    <Run Text="{Binding CurrentPatient.Duration, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}"/>
                                    
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="FontSize" Value="14" />
                                            <Setter Property="FontFamily" Value="Arial"/>
                                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static Member=enum:CRIState.PositiveCurrent}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding CurrentPatient.CRIStatus, ElementName=notifyWindow, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static Member=enum:CRIState.PositiveReviewed}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>                                  
                                </TextBlock>
                                
                            <!--</StackPanel>-->

                            <TextBlock Name="txtCRITopDescr" Text="{StaticResource POPUP_PositivePastDescription}" Height="22" 
                                       Visibility="{Binding StatusDescriptionVisibility, ElementName=notifyWindow}"
                                       VerticalAlignment="Center" TextAlignment="Left" Foreground="White"
                                       Style="{StaticResource PopupPatientNameFontStyle}"/>

                        </StackPanel>

                        <ctrl:TracingControl x:Name="tracingCtrl" Margin="8,0,0,8" Grid.ColumnSpan="3" Height="20" Width="362" MouseLeftButtonUp="TracingControl_MouseLeftButtonUp"
                                             HorizontalAlignment="Left" VerticalAlignment="Bottom" 
                                             />

                        <Border HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="7,0,0,8" MouseLeftButtonUp="TracingControl_MouseLeftButtonUp"
                                Grid.ColumnSpan="3" Height="20" Width="362" Background="Black" ToolTip="Open PeriCALM CheckList Tracing View">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Opacity" Value="0"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.2"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        
                    </Grid>

                    <Grid Grid.Row="1" Background="#E6E6E6" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <DockPanel>
                            <StackPanel Name="patientDetails" DockPanel.Dock="Left" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Height="24" Margin="20,0,63,0">

                                <TextBlock Text="{Binding CurrentPatient.BedName, ElementName=notifyWindow}" VerticalAlignment="Center" Margin="0,0,0,0" 
                                               Style="{StaticResource PopupPatientNameBoldFontStyle}"
                                               Foreground="#424141"
                                               />
                                
                                <TextBlock Text="," VerticalAlignment="Center" 
                                               Foreground="#424141">
                                    <TextBlock.Style>
                                        <Style BasedOn="{StaticResource PopupPatientNameBoldFontStyle}" TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding CurrentPatient.PatientDisplayName, ElementName=notifyWindow}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                
                                <TextBlock Text="{Binding CurrentPatient.PatientDisplayName, ElementName=notifyWindow}" VerticalAlignment="Center" Margin="8,0,0,0" 
                                               Style="{StaticResource PopupPatientNameBoldFontStyle}" 
                                               Foreground="#424141"
                                               />
                 
                            </StackPanel>
                            
                            <TextBlock x:Name="txtActions" Text="actions >" Style="{StaticResource PopupActionsLinkFontStyle}" Margin="0,6,15,0" 
                                       VerticalAlignment="Center" HorizontalAlignment="Right" DockPanel.Dock="Right" MouseLeftButtonUp="actionsMenu_MouseLeftButtonUp">
                          
                            <TextBlock.Resources>
                                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="WhiteSmoke" />
                                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                                </TextBlock.Resources>
                                                                                             
                                <TextBlock.ContextMenu>

                                    <ContextMenu Name="actionsMenu" Background="LightGray" >

                                        <MenuItem Header="Open PeriCALM CheckList Tracing View" Style="{StaticResource PopupMenuItemStyle}" Name="OpenTracing"  HorizontalAlignment="Left"  Click="OpenTracing_Click" />
                                        <MenuItem Header="Close Notification Dialog" Style="{StaticResource PopupMenuItemStyle}" Name="CloseSynopsis"  HorizontalAlignment="Left" Click="CloseSynopsis_Click" />
                                        <MenuItem Header="Close PeriCALM CheckList Application" Style="{StaticResource PopupMenuItemStyle}"  Name="ClosePatternsApplication" HorizontalAlignment="Left" Click="ClosePatternsApplication_Click" />

                                        <Separator HorizontalAlignment="Stretch" Style="{StaticResource SeparatorStyle}" Name="MenuSeparator"/>

                                        <MenuItem Header="Change Patient Data" Style="{StaticResource PopupMenuItemStyle}" Name="ChangePatient"  HorizontalAlignment="Left" Click="ChangePatient_Click" />
                                        <MenuItem Header="Merge Patient Charts" Style="{StaticResource PopupMenuItemStyle}" Name="MergePatient"  HorizontalAlignment="Left" Click="MergePatient_Click" />
                                        <MenuItem Header="Discharge Patient" Style="{StaticResource PopupMenuItemStyle}" Name="DischargePatient"  HorizontalAlignment="Left" Click="DischargePatient_Click" />
                                        <MenuItem Header="Admit Patient" Style="{StaticResource PopupMenuItemStyle}" Name="AdmitPatient"  HorizontalAlignment="Left" Click="AdmitPatient_Click" />

                                        <ContextMenu.BitmapEffect>
                                            <DropShadowBitmapEffect Color="Black" ShadowDepth="5" Opacity="0.5"/>
                                        </ContextMenu.BitmapEffect>
                                        
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                           
                        </DockPanel>

                        <ContentControl Grid.Row="1" Background="White" Style="{StaticResource PopupCRIContentStyle}"/>
                        
                    </Grid>
                   
                </Grid>
            </DockPanel>
        </Border>
    </Grid>
<!--</Viewbox>-->
</Window>
