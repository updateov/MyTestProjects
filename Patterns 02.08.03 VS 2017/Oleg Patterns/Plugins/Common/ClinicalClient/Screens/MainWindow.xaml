<Window x:Class="PatternsCRIClient.Screens.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:src="clr-namespace:PatternsCRIClient.Screens"
        xmlns:control="clr-namespace:PatternsCRIClient.Controls"
        xmlns:converter="clr-namespace:PatternsCRIClient.Converters"
        xmlns:data="clr-namespace:PatternsCRIClient.Data"
        xmlns:enum="clr-namespace:CRIEntities;assembly=CRIEntities"
        Visibility="Collapsed"
        Title="PeriCALM® Checklist™"  Height="660" Width="750" MinHeight="650" MinWidth="730"
        ResizeMode="CanResize"
        Name="mainWindow"
        Loaded="mainWindow_Loaded"
        Closing="mainWindow_Closing"    
        SnapsToDevicePixels="True"
        SizeToContent="Manual"
        StateChanged="mainWindow_StateChanged"
        >
    
    <Window.Resources>

        <Storyboard x:Key="ShowPopup">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PopupTooltip" Storyboard.TargetProperty="(Popup.IsOpen)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00.4" Value="True" />
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="HidePopup" Storyboard.TargetName="PopupTooltip" Storyboard.TargetProperty="(Popup.IsOpen)">
            <BooleanAnimationUsingKeyFrames>
                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False" />
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>

        <!-- History ListBoxItem Style -->
        <Style x:Key="HistoryListBoxItem" TargetType="ListBoxItem">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <StackPanel Orientation="Horizontal" Margin="5,0,5,5">
                            <TextBlock Style="{StaticResource TooltipPatternsSmallStyle}">
                            <Run Text="Positive at:"/>
                            <Run Text="{Binding DisplayStartTime}" FontWeight="Bold"/>
                            <Run Text="Duration:"/>
                            <Run Text="{Binding Duration}" FontWeight="Bold"/>
                            </TextBlock>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Tooltip Style -->
        <Style x:Key="TooltipPatient" x:Name="_tooltip" TargetType="ContentControl">
            <Setter Property="MaxHeight" Value="260"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>

                        <Border Background="White" BorderBrush="Black" BorderThickness="2" Padding="0,0,0,5" Name="PopupCtrl" >
                            <StackPanel Orientation="Vertical" Margin="0,0,0,5">

                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="50">
                                    
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="0.13*"/>
                                        <ColumnDefinition Width="35"/>
                                        <ColumnDefinition Width="{Binding Converter={StaticResource SettingsToWidthConverter}, ConverterParameter=35}"/>
                                        <ColumnDefinition Width="{Binding Converter={StaticResource SettingsToWidthConverter}, ConverterParameter=35}"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <TextBlock Grid.Column="0" Text="{Binding PatientTooltipData.BedName, ElementName=mainWindow}" MaxWidth="140"
                                               ToolTip="{Binding PatientTooltipData.BedName, ElementName=mainWindow}"
                                               VerticalAlignment="Center" Margin="10,0,0,0" Style="{StaticResource TooltipTitlePatternsMediumStyle}"/>

                                    <StackPanel Grid.Column="1"  Orientation="Horizontal">
                                        <TextBlock Text="," VerticalAlignment="Center" Style="{StaticResource TooltipTitlePatternsMediumStyle}"/>

                                        <TextBlock Text="{Binding PatientTooltipData.PatientDisplayName, ElementName=mainWindow}" 
                                               VerticalAlignment="Center" Margin="5,0,0,0" Style="{StaticResource TooltipTitlePatternsMediumStyle}"/>
                                    </StackPanel>

                                    <Button Name="buttonDischarge"  VerticalAlignment="Center" Grid.Column="4" HorizontalAlignment="Left"
                                            Width="30" Height="30" Margin="0,0,0,0" ToolTip="Discharge patient"
                                            Visibility="{Binding Converter={StaticResource SettingsToVisibilityConverter}}"
                                            Click="buttonDischarge_Click">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="OverlayPlus" CornerRadius="0" Height="30" Width="30" Background="White" >                                                                                                                             
                                                    <ContentControl>
                                                        <ContentControl.Style>
                                                            <Style TargetType="ContentControl">
                                                                <Setter Property="Template" Value="{StaticResource IconDischargeGrey}"/>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Template" Value="{StaticResource IconDischargeHover}"/>
                                                                    </Trigger>                                                                    
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ContentControl.Style>
                                                    </ContentControl>
                                                </Border>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>

                                    <Button Name="buttonMerge"  VerticalAlignment="Center" Grid.Column="3" HorizontalAlignment="Left"
                                            Width="30" Height="30" Margin="0,0,0,0" ToolTip="Merge patient charts"
                                            Visibility="{Binding Converter={StaticResource SettingsToVisibilityConverter}}" 
                                            Click="buttonMerge_Click">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="OverlayPlus" CornerRadius="0" Height="30" Width="30" Background="White" >
                                                    <ContentControl>
                                                        <ContentControl.Style>
                                                            <Style TargetType="ContentControl">
                                                                <Setter Property="Template" Value="{StaticResource IconMergeBlack}"/>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Template" Value="{StaticResource IconMergeBlue}"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ContentControl.Style>
                                                    </ContentControl>
                                                </Border>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>

                                    <Button Name="buttonEdit"  VerticalAlignment="Center" Grid.Column="2" HorizontalAlignment="Left"
                                            Margin="0,0,0,0" Width="30" Height="30" ToolTip="Change patient data"
                                            Visibility="Visible" Click="buttonEdit_Click">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="OverlayPlus" CornerRadius="0" Height="30" Width="30" Background="White" >
                                                    <ContentControl>
                                                        <ContentControl.Style>
                                                            <Style TargetType="ContentControl">
                                                                <Setter Property="Template" Value="{StaticResource IconEditGrey}"/>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Template" Value="{StaticResource IconEditHover}"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ContentControl.Style>
                                                    </ContentControl>
                                                </Border>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                                                        
                                </Grid>
                                <!--</DockPanel>-->

                                <Separator Height="5"/>

                                <StackPanel Orientation="Horizontal" Margin="10,10,0,0">
                                    <StackPanel.Resources>
                                        
                                        <Style x:Key="TooltipEmptyGAStyle" BasedOn="{StaticResource TooltipPatternsGAFetusesStyle}" TargetType="TextBlock">
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="Text" Value="{Binding PatientTooltipData.GA, ElementName=mainWindow}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=PatientTooltipData.GA, ElementName=mainWindow}" Value="">
                                                    <Setter Property="Text" Value="?" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=PatientTooltipData.GA, ElementName=mainWindow}" Value="{x:Null}">
                                                    <Setter Property="Text" Value="?" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>

                                        <Style x:Key="TooltipEmptyFetusesStyle" BasedOn="{StaticResource TooltipPatternsGAFetusesStyle}" TargetType="TextBlock">
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="Text" Value="{Binding PatientTooltipData.Fetuses, ElementName=mainWindow}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=PatientTooltipData.Fetuses, ElementName=mainWindow}" Value="0">
                                                    <Setter Property="Text" Value="?" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                        
                                    </StackPanel.Resources>
                                    
                                    <TextBlock Style="{StaticResource TooltipPatternsGAFetusesStyle}">
                                            <Run Text="GA: "/>
                                            <TextBlock Style="{StaticResource TooltipEmptyGAStyle}" />
                                            <Run Text=", Fetuses: "/>
                                            <TextBlock Style="{StaticResource TooltipEmptyFetusesStyle}" />                                            
                                    </TextBlock>
                                                                      
                                </StackPanel>

                                <Grid 
                                  Margin="10,10,10,0"
                                  Background="{Binding PatientTooltipData.CRIStatus, ElementName=mainWindow, Converter={StaticResource CRIStatusToFrameBackgroundConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="25"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <Canvas Grid.Column="0"
                                        Grid.Row="0"
                                        Height="16" 
                                        Width="16" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="0,0,0,0">
                                        <ContentControl Template="{Binding PatientTooltipData.CRIStatus, ElementName=mainWindow, Converter={StaticResource CRIStatusToTooltipBackgroundConverter}}"/>
                                    </Canvas>

                                    <TextBlock Grid.Column="1"
                                           Grid.Row="0"
                                           VerticalAlignment="Center" 
                                           Margin="0,5,14,5"
                                           Text="{Binding PatientTooltipData.CRIStatus, ElementName=mainWindow, Converter={StaticResource CRIStatusToTooltipDescriptionConverter}}" 
                                           Style="{StaticResource TooltipStatusDescrStyle}" 
                                           Foreground="{Binding PatientTooltipData.CRIStatus, ElementName=mainWindow, Converter={StaticResource CRIStatusToFrameForegroundConverter}}"/>
                                    <TextBlock Grid.Row="1" 
                                           Grid.Column="1"
                                           x:Name="textBlockCurrentPositive"
                                           Margin="0,0,5,5" 
                                           Foreground="{Binding PatientTooltipData.CRIStatus, ElementName=mainWindow, Converter={StaticResource CRIStatusToFrameForegroundConverter}}"
                                           Style="{StaticResource TooltipStatusDescrStyle}">
                                    <Run Text="Positive at:"/>
                                    <Run Text="{Binding PatientTooltipData.DisplayStartTime, ElementName=mainWindow}" FontWeight="Bold"/>
                                    <Run Text="Duration:"/>
                                    <Run Text="{Binding PatientTooltipData.Duration, ElementName=mainWindow}" FontWeight="Bold"/>
                                    </TextBlock>
                                </Grid>

                                <Grid x:Name="panelHistory" Margin="14,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="35"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Text="Past positive CheckList - not reviewed:" Margin="20,15,0,0" Style="{StaticResource TooltipPatternsGrayBoldMediumStyle}"/>
                                    <ListBox Grid.Row="1" 
                                         x:Name="tooltipPopup"
                                         ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                         Margin="15,5,10,0" 
                                         MaxHeight="60"
                                         BorderBrush="Transparent" 
                                         ItemContainerStyle="{StaticResource HistoryListBoxItem}"
                                         ItemsSource="{Binding PatientTooltipData.NotRevewedPositiveCRIs, ElementName=mainWindow}"
                                         BorderThickness="0" 
                                         VerticalAlignment="Stretch">
                                    </ListBox>
                                </Grid>

                            </StackPanel>
                        </Border>
                                                                                             
                        <DataTemplate.Triggers>

                            <DataTrigger Binding="{Binding PatientTooltipData.IsCurrentPositive, ElementName=mainWindow}" Value="False">
                                <Setter TargetName="textBlockCurrentPositive" Property="Visibility" Value="Collapsed" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding PatientTooltipData.NotRevewedPositiveCRIs.Count, ElementName=mainWindow}" Value="0" >
                                <Setter TargetName="panelHistory" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>

                        </DataTemplate.Triggers>

                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  ListBox Style  -->
        <Style x:Key="PatientListItem" TargetType="ListBoxItem">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid Name="itemListGrid" 
                          HorizontalAlignment="Left" 
                          Height="40" 
                          Margin="0,0,0,0" 
                          Width="{Binding Path=ViewportWidth, 
                                          RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollViewer}, 
                                          Converter={StaticResource ListWidthToItemWidthConverter}}">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.3*" MaxWidth="100"/>
                                <ColumnDefinition Width="0.25*"/>
                                <ColumnDefinition Width="40" Name="colBedIcon"/>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>

                            <Border Name="selectedPatientListBorder" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    Grid.Column="0" Grid.ColumnSpan="4"
                                    Background="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}"
                                    SnapsToDevicePixels="true" 
                                    BorderBrush="Transparent" BorderThickness="0"/>
                            
                            <TextBlock Grid.Column="0" Name="txtBedName" Text="{Binding Path=BedName}" Style="{StaticResource ItemBedNameStyle}"
                                       Margin="20,2,0,0" TextTrimming="CharacterEllipsis" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                       Foreground="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToForegroundConverter}, UpdateSourceTrigger=PropertyChanged}"/>

                            <TextBlock Grid.Column="1" Name="txtPatientName" Text="{Binding Path=PatientDisplayName}" Style="{StaticResource ItemPatientNameStyle}"
                                       Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,0,0,0" TextTrimming="CharacterEllipsis"
                                       Foreground="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToForegroundConverter}, UpdateSourceTrigger=PropertyChanged}"/>

                            <Canvas Name="canvasBed" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left" Height="32" Width="32" Margin="0,0,10,0"
                                    Visibility="{Binding Converter={StaticResource BedSideModeToVisibilityConverter}}"
                                    Background="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}">
                                <ContentControl Template="{Binding Path=IsCurrentBed, Converter={StaticResource VisitToIconBed32Converter}}"/>
                            </Canvas>
                            
                            <Canvas Name="canvasIcon" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="20" Width="30" Margin="0,0,10,0"
                                    Background="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}">

                                <ContentControl Template="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToIconConverter}, UpdateSourceTrigger=PropertyChanged}"/>

                            </Canvas>

                            <Canvas Name="canvasArrow" Background="Transparent" Grid.Column="4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-2,0,0,0">

                                <Path Name="arrowShape" Data="M-1,3 L17,26 -1,46" Stretch="UniformToFill" />

                                <Line Name="line1"
                                        X1="0" Y1="1"
                                        X2="18" Y2="24"
                                        Stroke="Transparent"
                                        StrokeThickness="3" />

                                <Line Name="line2"
                                        X1="18" Y1="23"
                                        X2="0" Y2="45"
                                        Stroke="Transparent"
                                        StrokeThickness="3"
                                        Canvas.Top="0" />

                                <Line Name="line3"
                                        X1="-1" Y1="4"
                                        X2="-1" Y2="42"
                                        Stroke="Transparent"
                                        StrokeThickness="2" />
                            </Canvas>

                            <Line Name="lineSeparator" Grid.Column="0" Grid.ColumnSpan="4" 
                                  Margin="15,0,15,0" VerticalAlignment="Bottom" Stroke="LightGray" 
                                  StrokeThickness="1" X2="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}}">
                            </Line>

                            <Popup AllowsTransparency="True" Name="PopupTooltip"
                               Placement="Right"
                               PopupAnimation="None"
                               Width="340"
                               IsOpen="{Binding Path=IsMouseOver, ElementName=itemListGrid, Mode=OneWay}">
                                <ContentControl Style="{StaticResource TooltipPatient}"/>
                            </Popup>
                            
                        </Grid>

                        <ControlTemplate.Triggers>

                            <DataTrigger Binding="{Binding IsCentralMode, ElementName=mainWindow}" Value="True" >
                                <Setter TargetName="txtBedName" Property="Style" Value="{StaticResource ItemCentralModeBedNameStyle}" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsCentralMode, ElementName=mainWindow}" Value="True" >
                                <Setter TargetName="txtPatientName" Property="Style" Value="{StaticResource ItemCentralModePatientNameStyle}" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Converter={StaticResource BedSideModeToVisibilityConverter}}" Value="Collapsed">
                                <Setter TargetName="colBedIcon" Property="Width" Value="0" />
                            </DataTrigger>
                            
                            <DataTrigger Binding="{Binding Path=IsSelectedPatient, UpdateSourceTrigger=PropertyChanged}" Value="True">

                                <Setter TargetName="txtBedName" Property="FontWeight" Value="Bold"/>
                                <Setter TargetName="txtPatientName" Property="FontWeight" Value="Bold"/>

                                <Setter TargetName="selectedPatientListBorder" Property="BorderThickness" Value="3" />
                                <Setter TargetName="selectedPatientListBorder" Property="BorderBrush" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToForegroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                                <Setter TargetName="lineSeparator" Property="Stroke" Value="Transparent" />

                                <Setter TargetName="arrowShape" Property="Fill" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                <Setter TargetName="line1" Property="Stroke" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToForegroundConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                <Setter TargetName="line2" Property="Stroke" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToForegroundConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                <Setter TargetName="line3" Property="Stroke" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}"/>

                                <Setter TargetName="itemListGrid" Property="BitmapEffect" >
                                    <Setter.Value>
                                        <DropShadowBitmapEffect ShadowDepth="5" Color="Black" Direction="320" Softness="0.5" Opacity="0.6" />
                                    </Setter.Value>
                                </Setter>

                                <Setter TargetName="line2" Property="BitmapEffect" >
                                    <Setter.Value>
                                        <DropShadowBitmapEffect ShadowDepth="5" Color="Black" Direction="320" Softness="0.5" Opacity="0.6" />
                                    </Setter.Value>
                                </Setter>

                                <Setter TargetName="itemListGrid" Property="Height" Value="46" />

                            </DataTrigger>
                        
                            <EventTrigger RoutedEvent="Grid.MouseEnter">
                                <BeginStoryboard Storyboard="{StaticResource ShowPopup}"/>
                            </EventTrigger>
                            
                            <EventTrigger RoutedEvent="Grid.MouseLeave">
                                <BeginStoryboard Storyboard="{StaticResource HidePopup}"/>
                            </EventTrigger>

                        <DataTrigger Binding="{Binding Path=IsOpen, ElementName=PopupTooltip}" Value="True" >
                            <Setter TargetName="selectedPatientListBorder" Property="Background" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter TargetName="canvasBed" Property="Background" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter TargetName="canvasIcon" Property="Background" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsOpen, ElementName=PopupTooltip}" Value="True"/>
                                <Condition Binding="{Binding Path=IsSelectedPatient, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="selectedPatientListBorder" Property="Background" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                            <Setter TargetName="canvasIcon" Property="Background" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter TargetName="canvasBed" Property="Background" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter TargetName="arrowShape" Property="Fill" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter TargetName="line3" Property="Stroke" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Tree Item Style-->
        <HierarchicalDataTemplate DataType="{x:Type data:TreeViewItems}" ItemsSource="{Binding Path=SecondLevelItems}" >

            <!--Display the TopLevelName property in the first level.-->
            <DockPanel Height="40" Margin="-17,0,0,0" Name="PatientTreeHeader">               
                
                <Border Name="currentPatientTreeBorder" 
                        HorizontalAlignment="Center"
                        Padding="2" 
                        Background="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}"  
                        Width="{Binding Path=ViewportWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollViewer}, Converter={StaticResource ListWidthToHeaderWidthConverter}}"
                        SnapsToDevicePixels="true" BorderBrush="LightGray" BorderThickness="1"
                        >       
                    
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="30"/>
                        </Grid.ColumnDefinitions>

                        <Canvas x:Name="expandButton" Width="15" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,5,0,0" >
                            <ContentControl Template="{Binding Path=IsExpanded, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}, Converter={StaticResource GroupingIconConverter}}" 
                                        Visibility="{Binding Path=HasItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Converter={StaticResource IconVisibilityConverter}}"/>
                        </Canvas>

                        <TextBlock Grid.Column="1" Name="txtTopLevelName" Text="{Binding Path=GroupName}" Style="{StaticResource FrameStatusDescrStyle}"
                                VerticalAlignment="Center" HorizontalAlignment="Stretch" FontWeight="Bold"
                                Foreground="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToForegroundConverter}, UpdateSourceTrigger=PropertyChanged}" 
                                TextWrapping="Wrap" Margin="10,0,0,0"
                                />

                        <TextBlock Grid.Column="2" Text="{Binding Path=Count}" Style="{StaticResource FrameStatusDescrStyle}" FontWeight="Bold"
                               Foreground="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToForegroundConverter}, UpdateSourceTrigger=PropertyChanged}" 
                               HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,8,0"/>
                    </Grid>                
                    
                </Border>                
            </DockPanel>

            <!--Display each string in the SecondLevelItems property in the second level.-->
            <HierarchicalDataTemplate.ItemTemplate>
                <DataTemplate >

                    <Grid Name="itemTemplateGrid" HorizontalAlignment="Left" Height="40"
                      Background="Transparent"  
                      Margin="-35,0,0,0" 
                      Width="{Binding Path=ViewportWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollViewer}, Converter={StaticResource ListWidthToItemWidthConverter}}"
                        >

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*" MaxWidth="100"/>
                            <ColumnDefinition Width="0.25*"/>
                            <ColumnDefinition Width="40" Name="colBedIcon"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>

                        <Border Name="selectedPatientTreeBorder" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Grid.Column="0" Grid.ColumnSpan="4"
                                Background="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}"
                                SnapsToDevicePixels="true" 
                                BorderBrush="Transparent" BorderThickness="0"/>

                        <TextBlock Grid.Column="0" Name="txtBedName" Text="{Binding Path=BedName}" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                   Style="{StaticResource ItemBedNameStyle}" Margin="20,2,0,0"
                                   Foreground="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToForegroundConverter}, UpdateSourceTrigger=PropertyChanged}"
                                   />

                        <TextBlock Grid.Column="1" Name="txtPatientName" Text="{Binding Path=PatientDisplayName}" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                   Style="{StaticResource ItemPatientNameStyle}" Margin="5,0,0,0"
                                   Foreground="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToForegroundConverter}, UpdateSourceTrigger=PropertyChanged}"
                                   />

                        <Canvas Name="canvasBed" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left" Height="32" Width="32" Margin="0,0,10,0" 
                                Visibility="{Binding Converter={StaticResource BedSideModeToVisibilityConverter}}"
                                Background="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}">
                            <ContentControl Template="{Binding Path=IsCurrentBed, Converter={StaticResource VisitToIconBed32Converter}}"/>
                        </Canvas>
                        
                        <Canvas Name="canvasIcon" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="20" Width="30" Margin="0,0,10,0"
                                Background="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}">
                            <ContentControl Template="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToIconConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                        </Canvas>

                        <Canvas Name="canvasArrow" Background="Transparent" Grid.Column="4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-2,0,0,0">

                            <Path Name="arrowShape" Data="M-1,3 L17,26 -1,46" Stretch="UniformToFill" />

                            <Line Name="line1"
                                    X1="0" Y1="1"
                                    X2="18" Y2="24"
                                    Stroke="Transparent"
                                    StrokeThickness="3" />

                            <Line Name="line2"
                                    X1="18" Y1="23"
                                    X2="0" Y2="45"
                                    Stroke="Transparent"
                                    StrokeThickness="3"
                                    Canvas.Top="0" />

                            <Line Name="line3"
                                    X1="-1" Y1="4"
                                    X2="-1" Y2="42"
                                    Stroke="Transparent"
                                    StrokeThickness="2" />
                        </Canvas>

                        <Line Name="lineSeparator" Grid.Column="0" Grid.ColumnSpan="4" Margin="15,0,15,0" VerticalAlignment="Bottom" 
                                  Stroke="LightGray" StrokeThickness="1" X2="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}}"></Line>

                        <Popup AllowsTransparency="True" Name="PopupTooltip"
                               Placement="Right"
                               PopupAnimation="None"
                               Width="340"
                               IsOpen="{Binding Path=IsMouseOver, ElementName=itemTemplateGrid, Mode=OneWay}">
                            <ContentControl Name="stateIcon" Style="{StaticResource TooltipPatient}"/>
                        </Popup>

                    </Grid>

                    <DataTemplate.Triggers>

                        <DataTrigger Binding="{Binding IsCentralMode, ElementName=mainWindow}" Value="True" >
                            <Setter TargetName="txtBedName" Property="Style" Value="{StaticResource ItemCentralModeBedNameStyle}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsCentralMode, ElementName=mainWindow}" Value="True" >
                            <Setter TargetName="txtPatientName" Property="Style" Value="{StaticResource ItemCentralModePatientNameStyle}" />
                        </DataTrigger>

                        <!--<DataTrigger Binding="{Binding Path=CRIStatus, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static Member=enum:CRIState.PositivePastNotYetReviewed}">
                            <Setter TargetName="itemTemplateGrid" Property="Height" Value="46" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=CRIStatus, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static Member=enum:CRIState.PositiveCurrent}">
                            <Setter TargetName="itemTemplateGrid" Property="Height" Value="46" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=CRIStatus, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static Member=enum:CRIState.PositiveReviewed}">
                            <Setter TargetName="itemTemplateGrid" Property="Height" Value="46" />
                        </DataTrigger>-->
                        
                        <DataTrigger Binding="{Binding Converter={StaticResource BedSideModeToVisibilityConverter}}" Value="Collapsed">
                            <Setter TargetName="colBedIcon" Property="Width" Value="0" />
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding Path=IsLast}" Value="True">
                            <Setter TargetName="lineSeparator" Property="Visibility" Value="Hidden" />
                            <Setter Property="Margin" Value="0,0,0,3" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=IsSelectedPatient, UpdateSourceTrigger=PropertyChanged}" Value="True">

                            <Setter TargetName="txtBedName" Property="FontWeight" Value="Bold"/>
                            <Setter TargetName="txtPatientName" Property="FontWeight" Value="Bold"/>

                            <Setter TargetName="selectedPatientTreeBorder" Property="BorderThickness" Value="3" />
                            <Setter TargetName="selectedPatientTreeBorder" Property="BorderBrush" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToForegroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter TargetName="itemTemplateGrid" Property="BitmapEffect" >
                                <Setter.Value>
                                    <DropShadowBitmapEffect ShadowDepth="5" Color="Black" Direction="320" Softness="0.5" Opacity="0.6" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="lineSeparator" Property="Stroke" Value="Transparent" />

                            <Setter TargetName="arrowShape" Property="Fill" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                            <Setter TargetName="line1" Property="Stroke" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToForegroundConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                            <Setter TargetName="line2" Property="Stroke" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToForegroundConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                            <Setter TargetName="line3" Property="Stroke" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}"/>

                            <Setter TargetName="line2" Property="BitmapEffect" >
                                <Setter.Value>
                                    <DropShadowBitmapEffect ShadowDepth="5" Color="Black" Direction="320" Softness="0.5" Opacity="0.6" />
                                </Setter.Value>
                            </Setter>

                            <Setter TargetName="itemTemplateGrid" Property="Height" Value="46" />

                        </DataTrigger>

                        <EventTrigger RoutedEvent="Grid.MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource ShowPopup}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Grid.MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource HidePopup}"/>
                        </EventTrigger>

                    <DataTrigger Binding="{Binding Path=IsOpen, ElementName=PopupTooltip}" Value="True" >
                        <Setter TargetName="selectedPatientTreeBorder" Property="Background" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter TargetName="canvasBed" Property="Background" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter TargetName="canvasIcon" Property="Background" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                    </DataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsOpen, ElementName=PopupTooltip}" Value="True"/>
                            <Condition Binding="{Binding Path=IsSelectedPatient, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="selectedPatientTreeBorder" Property="Background" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter TargetName="canvasIcon" Property="Background" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter TargetName="canvasBed" Property="Background" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter TargetName="arrowShape" Property="Fill" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter TargetName="line3" Property="Stroke" Value="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToHoverBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}" />
                    </MultiDataTrigger>
                    
                </DataTemplate.Triggers>

                </DataTemplate>

            </HierarchicalDataTemplate.ItemTemplate>

            <HierarchicalDataTemplate.Triggers>

                <DataTrigger Binding="{Binding Path=CRIStatus}" Value="{x:Static Member=enum:CRIState.PositiveCurrent}">
                    <Setter TargetName="PatientTreeHeader" Property="Height" Value="46" />
                </DataTrigger>

            </HierarchicalDataTemplate.Triggers>
            
        </HierarchicalDataTemplate>

        <Style x:Key="PatientListItemStyle" TargetType="ListBoxItem" BasedOn="{StaticResource PatientListItem}">
            <EventSetter Event="MouseEnter" Handler="ViewItem_MouseEnter" />
            <EventSetter Event="MouseLeave" Handler="ViewItem_MouseLeave" />
        </Style>
        
    </Window.Resources>  

        <Grid x:Name="gridPatientWeb" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.20*" Name="patientListCol"/>
                <ColumnDefinition Width="0.80*" MinWidth="700"/>                         
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" HorizontalAlignment="Stretch">

            <Grid.RowDefinitions>
                <RowDefinition Height="42"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto" Name="legendRow" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" HorizontalAlignment="Stretch">
                  
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="{Binding Converter={StaticResource SettingsToWidthConverter}, ConverterParameter=42}" />
                </Grid.ColumnDefinitions>
                
                 <ComboBox x:Name="sortMenu" Style="{StaticResource CRIComboBoxStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" MinHeight="42" SelectedIndex="0" >
                
                <ComboBox.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                     Color="WhiteSmoke" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                     Color="Black" />
                </ComboBox.Resources>

                <ComboBoxItem x:Name="sortSubMenu1" Tag="{x:Static src:SortType.CRI_Positive}" Selected="sortMenu_Click" Height="35" HorizontalAlignment="Stretch" >
                    <StackPanel Orientation="Horizontal" >
                        <TextBlock Text="{StaticResource CRI_Positive_first}" Margin="25,10,0,0" TextTrimming="CharacterEllipsis"></TextBlock>
                    </StackPanel>
                </ComboBoxItem>

                <ComboBoxItem x:Name="sortSubMenu2" Tag="{x:Static src:SortType.Names_AZ}" Selected="sortMenu_Click" Height="35" >
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Top">
                        <Canvas Height="15" Width="15" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,10,0,0">
                            <ContentControl Template="{StaticResource MenuArrowUp2}"/>
                        </Canvas>
                        <TextBlock Text="{StaticResource Names_AZ}" Margin="10,10,0,0" TextTrimming="CharacterEllipsis"></TextBlock>
                   </StackPanel>
                </ComboBoxItem>

                <ComboBoxItem x:Name="sortSubMenu3" Tag="{x:Static src:SortType.Names_ZA}" Selected="sortMenu_Click" Height="35" >
                    <StackPanel Orientation="Horizontal"  VerticalAlignment="Top">
                        <Canvas Height="15" Width="15" HorizontalAlignment="Center" VerticalAlignment="Center"  Margin="0,10,0,0">
                            <ContentControl Template="{StaticResource MenuArrowDown2}"/>
                        </Canvas>
                        <TextBlock Text="{StaticResource Names_ZA}" Margin="10,10,0,0" TextTrimming="CharacterEllipsis"></TextBlock>
                   </StackPanel>
                </ComboBoxItem>

                <ComboBoxItem x:Name="sortSubMenu4" Tag="{x:Static src:SortType.BedName_Asc}" Selected="sortMenu_Click" Height="35" >
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Top">
                        <Canvas Height="15" Width="15" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,10,0,0">
                            <ContentControl Template="{StaticResource MenuArrowUp2}"/>
                        </Canvas>
                        <TextBlock Text="{StaticResource BedName_Asc}" Margin="10,10,0,0" TextTrimming="CharacterEllipsis"></TextBlock>
                    </StackPanel>
                </ComboBoxItem>

                <ComboBoxItem x:Name="sortSubMenu5" Tag="{x:Static src:SortType.BedName_Desc}" Selected="sortMenu_Click" Height="35" >
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Top">
                        <Canvas Height="15" Width="15" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,10,0,0">
                            <ContentControl Template="{StaticResource MenuArrowDown2}"/>
                        </Canvas>
                        <TextBlock Text="{StaticResource BedName_Desc}" Margin="10,10,0,0" TextTrimming="CharacterEllipsis"></TextBlock>
                    </StackPanel>
                </ComboBoxItem>    
                
            </ComboBox>

                <Button Name="btnAdmit" Grid.Column="1" Height="42" Width="42" BorderBrush="Transparent" Click="btnAdmit_Click" 
                        HorizontalAlignment="Right" BorderThickness="0" ToolTip="Admit a patient"
                        Visibility="{Binding Converter={StaticResource SettingsToVisibilityConverter}}">
                   
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="OverlayPlus" CornerRadius="0" Height="42" Width="41" Margin="1,0,0,0" >
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#D1D1D1" Offset="0.7"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ContentControl Template="{StaticResource IconMenuPlus}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="16"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver}" Value="False">
                                    <Setter TargetName="OverlayPlus" Property="Background" >
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="White" Offset="0"/>
                                                <GradientStop Color="#D1D1D1" Offset="0.7"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>                        
                    </Button.Template>                   
                </Button>
            </Grid>

            <TreeView  Grid.Row="1" 
                       x:Name="treePatients" 
                       SelectedItemChanged="treePatients_SelectedItemChanged"
                       VirtualizingStackPanel.IsVirtualizing="True"
                       VirtualizingStackPanel.VirtualizationMode="Recycling" 
                       ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                       Background="#E6E6E6" 
                       Width="Auto" 
                       Margin="0,0,0,14">
                
                <TreeView.Resources>
                    
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                     Color="{Binding Path=CRIStatus, Converter={StaticResource CRIStatusToForegroundConverter}}" />
                   
                </TreeView.Resources>
                
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Style.Triggers>
                            <Trigger Property="HasItems" Value="True" >
                                <Setter Property="IsExpanded" Value="{Binding Path=IsExpandedGroup}"/>
                            </Trigger>
                        </Style.Triggers>
                        <EventSetter Event="MouseUp" Handler="TreeViewItem_Click"/>
                        <EventSetter Event="MouseEnter" Handler="ViewItem_MouseEnter" />
                        <EventSetter Event="MouseLeave" Handler="ViewItem_MouseLeave" />
                    </Style>
                </TreeView.ItemContainerStyle>       
            </TreeView>
                
            <ListBox Grid.Row="1" 
                     x:Name="listPatientNameAZ" 
                     SelectionChanged="listPatients_SelectionChanged"
                    VirtualizingStackPanel.IsVirtualizing="True"
                    VirtualizingStackPanel.VirtualizationMode="Recycling"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ItemContainerStyle="{StaticResource PatientListItemStyle}"
                     Background="#E6E6E6" 
                     Width="Auto"
                     Margin="0,0,0,14">              
            </ListBox>
                
            <ListBox Grid.Row="1" 
                     x:Name="listPatientNameZA" 
                     SelectionChanged="listPatients_SelectionChanged"
                    VirtualizingStackPanel.IsVirtualizing="True"
                    VirtualizingStackPanel.VirtualizationMode="Recycling"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ItemContainerStyle="{StaticResource PatientListItemStyle}"
                     Background="#E6E6E6" 
                     Width="Auto"
                     Margin="0,0,0,14">
            </ListBox>

            <ListBox Grid.Row="1" 
                     x:Name="listPatientBedsAZ" 
                     SelectionChanged="listPatients_SelectionChanged"
                    VirtualizingStackPanel.IsVirtualizing="True"
                    VirtualizingStackPanel.VirtualizationMode="Recycling"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ItemContainerStyle="{StaticResource PatientListItemStyle}"
                     Background="#E6E6E6" 
                     Width="Auto"
                     Margin="0,0,0,14">        
            </ListBox>

            <ListBox Grid.Row="1" 
                     x:Name="listPatientBedsZA" 
                     SelectionChanged="listPatients_SelectionChanged"
                    VirtualizingStackPanel.IsVirtualizing="True"
                    VirtualizingStackPanel.VirtualizationMode="Recycling"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ItemContainerStyle="{StaticResource PatientListItemStyle}"
                     Background="#E6E6E6" 
                     Width="Auto"
                     Margin="0,0,0,14">
            </ListBox>
            
            <ToggleButton Name="legendToggle" Grid.Row="1" VerticalAlignment="Bottom" 
                        IsChecked="True" HorizontalAlignment="Stretch" Width="Auto" Height="14" Margin="0,0,0,0">
                
                <ToggleButton.Template>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                      Focusable="False"                                   
                                      RecognizesAccessKey="True" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      />
                        <ControlTemplate.Triggers>
                        </ControlTemplate.Triggers>                       
                    </ControlTemplate>
                </ToggleButton.Template>
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Content">
                            <Setter.Value>
                                <Border  BorderThickness="2" BorderBrush="White" Background="#F2F2F2" Width="Auto" Height="Auto">
                                    <ContentControl Template="{StaticResource LegendArrowDown}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" Height="8"/>
                                </Border>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>                            
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Border  BorderThickness="2" BorderBrush="White" Background="#F2F2F2" Width="Auto" Height="Auto">
                                            <ContentControl Template="{StaticResource LegendArrowUp}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" Height="8"/>
                                        </Border>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>

            <StackPanel Name="legendPanel" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                        Background="{StaticResource LegendGreyBackgroundBrush}" Orientation="Vertical"
                        Visibility="{Binding ElementName=legendToggle, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}">
                     
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="20,10,10,0" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.15*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Canvas Grid.Row="0" Height="25" Width="25" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <ContentControl Template="{StaticResource IconPositiveNotReviewed}"/>
                        </Canvas>
                        <TextBlock Grid.Column="1" Text="{StaticResource LGND_Positive_Not_Reviewed}" 
                                   Style="{StaticResource LegendStyle}"
                                   />

                        <Canvas Grid.Row="1" Height="25" Width="25" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <ContentControl Template="{StaticResource IconPositivePast}"/>
                        </Canvas>
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{StaticResource LGND_Past_positive_CRI}" 
                                   Style="{StaticResource LegendStyle}"
                                   />
                    
                        <Canvas Grid.Row="2" Height="25" Width="25" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <ContentControl Template="{StaticResource IconUnknownMissingGA}"/>
                        </Canvas>
                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{StaticResource LGND_Missing_GA}" 
                                   Style="{StaticResource LegendStyle}"
                                   />
                    
                        <Canvas Grid.Row="3" Height="25" Width="25" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <ContentControl Template="{StaticResource IconUnknownCriteriaNotMet}"/>
                        </Canvas>
                        <TextBlock Grid.Row="3" Grid.Column="1" Text="{StaticResource LGND_GA_NA}" 
                                   Style="{StaticResource LegendStyle}"
                                   />
                    
                        <Canvas Grid.Row="4" Height="25" Width="25" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <ContentControl Template="{StaticResource IconUnknownLessData}"/>
                        </Canvas>
                        <TextBlock Grid.Row="4" Grid.Column="1" Text="{StaticResource LGND_Less_Data}" 
                                   Style="{StaticResource LegendStyle}"
                                   />

                        <Canvas Grid.Row="5" Height="25" Width="25" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <ContentControl Template="{StaticResource IconCRI_OFF}"/>
                        </Canvas>
                        <TextBlock Grid.Row="5" Grid.Column="1" Text="{StaticResource LGND_Off}" 
                                       Style="{StaticResource LegendStyle}"
                                       />

                </Grid>
            </StackPanel>
        </Grid>
                      
        <!--<GridSplitter Grid.Column="1" Width="2" HorizontalAlignment="Left" Background="LightGray"/>-->

        <ToggleButton Name="patienListToggle" Grid.Column="1" VerticalAlignment="Stretch" Click="patienListToggle_Checked"
                                IsChecked="True" HorizontalAlignment="Left" Height="Auto" Width="14" Margin="0,0,0,0">

            <ToggleButton.Template>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              Focusable="False"                                   
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              />
                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ToggleButton.Template>
            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Content">
                        <Setter.Value>
                            <Border  BorderThickness="2" BorderBrush="White" Background="#F2F2F2" Width="Auto" Height="Auto">
                                <ContentControl Template="{StaticResource ArrowLeft}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" Height="12" ToolTip="Hide Patient List"/>
                            </Border>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Border  BorderThickness="2" BorderBrush="White" Background="#F2F2F2" Width="Auto" Height="Auto">
                                        <ContentControl Template="{StaticResource ArrowRight}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" Height="12" ToolTip="Show Patient List"/>
                                    </Border>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>

        <Grid Name="tracingGrid" Grid.Column="1" Margin="14,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding Path=SelectedPatient, ElementName=mainWindow, Converter={StaticResource VisitKeyToHeightConverter}, UpdateSourceTrigger=PropertyChanged}" 
                               MaxHeight="42" x:Name="attentionRow"/>
                <RowDefinition Height="42"/>
                <RowDefinition Height="*" MinHeight="540"/>
            </Grid.RowDefinitions>

            <Grid Name="attentionMessage" Background="#315EAD" Width="{Binding Path=ActualWidth, ElementName=tracingGrid}"
                  Visibility="{Binding Path=SelectedPatient, ElementName=mainWindow, Converter={StaticResource CurrentBedToVisibilityConverter}}" Height="42">                               
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.1*"/>
                    <ColumnDefinition Width="0.5*"/>
                    <ColumnDefinition Width="0.2*"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" TextTrimming="CharacterEllipsis">
                    <Run Text="Attention: " FontFamily="Arial" FontSize="16" Foreground="White"></Run>
                    <Run Text="Monitor of patient from a different bed!" FontFamily="Arial" FontSize="16" FontWeight="Bold" Foreground="White" ></Run>
                </TextBlock>

                <Border Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Stretch" Name="attentionBorder" Margin="0,0,0,0">
                    
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,0,10,0">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="42"/>
                        </Grid.ColumnDefinitions>
                    
                        <TextBlock Name="txtBackToBed" Grid.Column="0"
                                   VerticalAlignment="Center" HorizontalAlignment="Right" MouseLeftButtonUp="txtBackToBed_MouseLeftButtonUp" >
                            <Run Text="back to " />
                            <Run Text="{Binding Path=CurrentBedName, ElementName=mainWindow, Mode=TwoWay}" />
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="14" />
                                    <Setter Property="FontFamily" Value="Arial"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                    <Setter Property="TextAlignment" Value="Right"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="TextDecorations" Value="Underline"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    
                        <Canvas Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Height="32" Width="32" Margin="10,0,0,0" Background="Transparent">
                            <ContentControl Template="{StaticResource IconBedWhite32}"/>
                        </Canvas>
                    </Grid>
                    
                </Border>
                               
            </Grid>

            <Grid Grid.Row="1" Height="42" Width="{Binding Path=ActualWidth, ElementName=tracingGrid}" Background="#E6E6E6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="330"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <!--<Canvas Height="42" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Background="Transparent"/>-->
                
                    <Grid Name="patientDetails" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="42">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="35"/>
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Grid.Column="0" Text="{Binding SelectedPatient.BedName, ElementName=mainWindow}" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10,0,0,0" Style="{StaticResource FramePatternsBigStyle}"
                                   ToolTip="{Binding SelectedPatient.BedName, ElementName=mainWindow}" MaxWidth="140"/>

                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            
                            <TextBlock Text="{Binding Path=SelectedPatient.PatientDisplayName, ElementName=mainWindow}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="8,0,0,0" Style="{StaticResource FramePatternsBigStyle}" />

                            <TextBlock Text="," VerticalAlignment="Center" HorizontalAlignment="Right">
                                <TextBlock.Style>
                                    <Style BasedOn="{StaticResource FramePatternsBigStyle}" TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=SelectedPatient.BedName, ElementName=mainWindow}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            
                        </StackPanel>

                        <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Stretch">

                            <TextBlock Text="GA" VerticalAlignment="Center" Margin="10,0,0,0" HorizontalAlignment="Left">
                                <TextBlock.Style>
                                    <Style BasedOn="{StaticResource FramePatternsSmallStyle}" TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=SelectedPatient.BedName, ElementName=mainWindow}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <TextBlock Text="{Binding Path=SelectedPatient.GA, ElementName=mainWindow}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,0,0,0" Style="{StaticResource FramePatternsSmallStyle}" />
                        </StackPanel>
                        
                        <Canvas Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left" Height="32" Width="32" Margin="10,0,0,0" Background="Transparent">
                            <ContentControl Template="{Binding Path=SelectedPatient.Key, ElementName=mainWindow, Converter={StaticResource VisitKeyToFrameIconBed32Converter}, UpdateSourceTrigger=PropertyChanged}"/>
                        </Canvas>
                        
                    </Grid>

                <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Height="25" Grid.Column="1"
                                Background="{Binding Path=SelectedPatient.CRIStatus, ElementName=mainWindow, Converter={StaticResource CRIStatusToFrameBackgroundConverter}}">
                    
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="26"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                        <Canvas Height="16" Width="16" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0">
                            <ContentControl Template="{Binding Path=SelectedPatient.CRIStatus, ElementName=mainWindow, Converter={StaticResource CRIStatusToFrameIconConverter}}"/>
                        </Canvas>

                    <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="10,0,10,0" HorizontalAlignment="Stretch" 
                                   Text="{Binding Path=SelectedPatient.CRIStatus, ElementName=mainWindow, Converter={StaticResource  CRIStatusToDescriptionConverter}}" 
                                   Style="{StaticResource FrameStatusDescrStyle}" 
                                   Foreground="{Binding Path=SelectedPatient.CRIStatus, ElementName=mainWindow, Converter={StaticResource CRIStatusToFrameForegroundConverter}}"
                                   ToolTip="{Binding Path=SelectedPatient.CRIStatus, ElementName=mainWindow, Converter={StaticResource  CRIStatusToDescriptionConverter}}"/>
                                                
                </Grid>
                       
                <control:CheckBoxControl x:Name="ctrlReviewed" Grid.Column="1" 
                                         Checked="chkReviewed_Checked" Margin="0,0,30,0" Text="Reviewed"
                                         VerticalAlignment="Center" HorizontalAlignment="Right"
                                         Visibility="Visible"/>
                                                     
            </Grid>
            
          <DockPanel Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                
                <control:AdornedControl x:Name="LoadingAdorner" Panel.ZIndex="100">

                    <control:AdornedControl.AdornerContent>
                        <control:WaitControl></control:WaitControl>
                    </control:AdornedControl.AdornerContent>

                    <WebBrowser DockPanel.Dock="Top" x:Name="webBrowserTracingPatterns" Visibility="Hidden" OpacityMask="White" > <!--MinWidth="700" MinHeight="479"-->
                    </WebBrowser>
                               
                </control:AdornedControl>
                
            </DockPanel>
                 
        </Grid>

    </Grid>
</Window>
